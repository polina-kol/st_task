import streamlit as st
import yfinance as yf
import pandas as pd
import plotly.graph_objects as go
from datetime import datetime

# –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã

st.set_page_config(
    page_title='apple –∫–æ—Ç–∏—Ä–æ–≤–∫–∏',
    page_icon='üìà',
    layout='wide',
)

st.title('apple –∫–æ—Ç–∏—Ä–æ–≤–∫–∏')
st.markdown("---")

# –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö

@st.cache_data
def load_data(start_date, end_date):
    return yf.download('AAPL', start=start_date, end=end_date)

# –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–∞–π–¥–±–∞—Ä, —á–µ–ª–æ–≤–µ–∫ –º–æ–∂–µ—Ç –≤—ã–±–∏—Ä–∞—Ç—å –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏ 
# –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞
# –≤—Ä–µ–º—è - (1 –≤–∞—Ä–∏–∞–Ω—Ç: –≤—Ä—É—á–Ω—É—é –≤–±–∏–≤–∞—Ç—å 2 –≤–∞—Ä–∏–∞–Ω—Ç: —á–µ—Ä–µ–∑ —Ä–∞–¥–∏–æ –≤—ã–±–∏—Ä–∞—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–µ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∏(–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π —Å—Ç–æ–∏—Ç))
# —Ç–∏–ø –≥—Ä–∞—Ñ–∏–∫–∞ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ —Ä–∞–¥–∏–æ —Å–≤–µ—á–∞ –∏–ª–∏ –ª–∏–Ω–∏—è


with st.sidebar:                       
    st.header('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥—Ä–∞—Ñ–∏–∫–∞')
    choose_time_radio = st.radio(
        '–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:', 
        [
            '–ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π',
            '1 –º–µ—Å—è—Ü', 
            '3 –º–µ—Å—è—Ü–∞', 
            '6 –º–µ—Å—è—Ü–µ–≤', 
            '1 –≥–æ–¥',
            '2 –≥–æ–¥–∞',
            '3 –≥–æ–¥–∞'
        ], 
        index=0
    )

    DEFAULT_END = datetime.now().date()
    default_start = DEFAULT_END - pd.Timedelta(days=30)

    # –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –¥–∞—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞

    if choose_time_radio != '–ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π':
        time ={
            '1 –º–µ—Å—è—Ü': 30,
            '3 –º–µ—Å—è—Ü–∞': 90,
            '6 –º–µ—Å—è—Ü–µ–≤': 180,
            '1 –≥–æ–¥': 365,
            '2 –≥–æ–¥–∞': 730,
            '3 –≥–æ–¥–∞': 1095
        }
        default_start = DEFAULT_END - pd.Timedelta(days=time[choose_time_radio])

    start_date = st.date_input('–ù–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞:', default_start)
    end_date = st.date_input('–ö–æ–Ω–µ—á–Ω–∞—è –¥–∞—Ç–∞:', DEFAULT_END)


    choose_chart = st.radio(
        '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≥—Ä–∞—Ñ–∏–∫–∞:',
        ['–õ–∏–Ω–µ–π–Ω—ã–π', '–°–≤–µ—á–Ω–æ–π'],
        index=0
    )


if start_date >= end_date:
    st.error('–û—à–∏–±–∫–∞: –ù–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–∞–Ω—å—à–µ –∫–æ–Ω–µ—á–Ω–æ–π!')
else:
    st.write(f"–í—ã–±—Ä–∞–Ω–Ω—ã–µ –¥–∞—Ç—ã: {start_date} -> {end_date}")

    data = load_data(start_date, end_date)
    data.columns = ['Open', 'High', 'Low', 'Close', 'Volume']
    data = data.reset_index()

    st.write(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ –¥–∞–Ω–Ω—ã—Ö: {len(data)} –∑–∞–ø–∏—Å–µ–π")
    st.write(data.head(3))
    st.markdown("---")

    if choose_chart == '–õ–∏–Ω–µ–π–Ω—ã–π':
        fig = go.Figure(data=[go.Scatter(x=data['Date'], y=data['Close'], mode='lines')])
    else:
        fig = go.Figure(data=[go.Candlestick(
            x=data['Date'],
            open=data['Open'],
            high=data['High'],
            low=data['Low'],
            close=data['Close']
        )])

    fig.update_layout(
        xaxis_title='–¥–∞—Ç–∞',
        yaxis_title='—Ü–µ–Ω–∞',
        xaxis_rangeslider_visible=True
    )
    st.plotly_chart(fig, use_container_width=True)




